#!/bin/bash
#abort on error
set -e

function usage
{
  echo "usage: bash miRPV -fa path/to/fasta.fa -o path/to/output/ [-t treads || -h]"
  echo "   ";
  echo "  -fa | --fain			: fasta input of genome";
  echo "  -o | --out			: output folder path";
  echo "  -t | --threads		: number of threads to be used [default=4]";
  echo "  -h | --help			: Get help";
}

function parse_args
{
  # positional args
  args=()

  # named args
  while [ "$1" != "" ]; do
    case "$1" in
      -fa | --fain )               fain="$2";             shift;;
      -o | --out )       out="$2";     shift;;
      -t | --threads )        threads="$2";      shift;;
      -h | --help )                 usage;                   exit;; # quit and show usage
      * )                           args+=("$1")             # if no match, add it to the positional args
    esac
    shift # move to next kv pair
  done

  # restore positional args
  set -- "${args[@]}"

  # set positionals to vars
  #positional_1="${args[0]}"
  #positional_2="${args[1]}"

  # validate required args
  if [[ -z "${fain}" || -z "${out}" ]]; then
    echo "Invalid arguments"
    usage
    exit;
  fi

  # set defaults
  if [[ -z "$threads" ]]; then
    threads="4";
  fi
}
function run
{
  parse_args "$@"



  echo "named arg: fain: $fain"
  echo "named arg: out: $out"
  echo "named arg: threads: $threads"
}
run "$@";
